{"version":3,"sources":["components/ReactIsCapsLockActive.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["EVENT_KEY_DOWN","EVENT_KEY_UP","ReactIsCapsLockActive","state","isCapsLockActive","wasCapsLockActivated","event","getModifierState","setState","wasCapsLockDeactivated","document","addEventListener","this","removeEventListener","props","children","React","Component","Header","useState","visible","setVisible","ishow","setShow","isscore","setScore","quoteDisplayElement","getElementById","quoteInputElement","timerElement","start","className","onClick","id","autoFocus","autoComplete","active","style","display","getRandomQuote","fetch","then","response","json","data","content","renderNewQuote","a","quote","innerHTML","split","forEach","character","characterSpan","createElement","innerText","appendChild","value","startTimer","startTime","Date","setInterval","getTimerTime","Math","floor","score","arrayQuote","querySelectorAll","arrayValue","correct","index","classList","remove","add","window","location","reload","href","target","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eee1f757.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EVENT_KEY_DOWN = 'keydown'\r\nconst EVENT_KEY_UP = 'keyup'\r\n\r\nclass ReactIsCapsLockActive extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        isCapsLockActive: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(EVENT_KEY_DOWN, this.wasCapsLockActivated)\r\n        document.addEventListener(EVENT_KEY_UP, this.wasCapsLockDeactivated)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(EVENT_KEY_DOWN, this.wasCapsLockActivated)\r\n        document.removeEventListener(EVENT_KEY_UP, this.wasCapsLockDeactivated)\r\n    }\r\n\r\n    wasCapsLockActivated = event => {\r\n        if (\r\n            event.getModifierState &&\r\n            event.getModifierState('CapsLock') &&\r\n            this.state.isCapsLockActive === false\r\n        ) {\r\n            this.setState({ isCapsLockActive: true })\r\n        }\r\n    }\r\n\r\n    wasCapsLockDeactivated = event => {\r\n        if (\r\n            event.getModifierState &&\r\n            !event.getModifierState('CapsLock') &&\r\n            this.state.isCapsLockActive === true\r\n        ) {\r\n            this.setState({ isCapsLockActive: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children(this.state.isCapsLockActive)\r\n    }\r\n}\r\n\r\nexport default ReactIsCapsLockActive\r\n","import { useState } from \"react\";\r\nimport ReactIsCapsLockActive from \"./ReactIsCapsLockActive\";\r\nfunction Header() {\r\n  //Necessary hooks\r\n  const [visible, setVisible] = useState(false);\r\n  const [ishow, setShow] = useState(true);\r\n  const [isscore, setScore] = useState(false);\r\n\r\n  //Fetch API\r\n  const RANDOM_QUOTE_API_URL = \"http://api.quotable.io/random\";\r\n  const quoteDisplayElement = document.getElementById(\"quoteDisplay\");\r\n  const quoteInputElement = document.getElementById(\"quoteInput\");\r\n  const timerElement = document.getElementById(\"timer\");\r\n\r\n  //intitalize hooks\r\n  function start() {\r\n    setVisible(true);\r\n    setShow(false);\r\n  }\r\n\r\n  //intialize the main function\r\n  function ready() {\r\n    //event listener for input\r\n    quoteInputElement.addEventListener(\"input\", () => {\r\n      const arrayQuote = quoteDisplayElement.querySelectorAll(\"span\");\r\n      const arrayValue = quoteInputElement.value.split(\"\");\r\n      let correct = true;\r\n      var score;\r\n      //diving every character in new span\r\n      arrayQuote.forEach((characterSpan, index) => {\r\n        const character = arrayValue[index];\r\n        if (character == null) {\r\n          characterSpan.classList.remove(\"correct\");\r\n          characterSpan.classList.remove(\"incorrect\");\r\n          correct = false;\r\n        } else if (character === characterSpan.innerText) {\r\n          characterSpan.classList.add(\"correct\");\r\n          characterSpan.classList.remove(\"incorrect\");\r\n        } else {\r\n          characterSpan.classList.remove(\"correct\");\r\n          characterSpan.classList.add(\"incorrect\");\r\n          correct = false;\r\n        }\r\n      });\r\n      //on correct input render new quote\r\n      if (correct) renderNewQuote();\r\n      score = getTimerTime();\r\n      // calculate score\r\n      if (correct) {\r\n        setScore(true);\r\n        document.getElementById(\"getscore\").innerHTML = \"Score: \" + score;\r\n      }\r\n      score = 0;\r\n    });\r\n    //fetch random quote\r\n    function getRandomQuote() {\r\n      return fetch(RANDOM_QUOTE_API_URL)\r\n        .then((response) => response.json())\r\n        .then((data) => data.content);\r\n    }\r\n\r\n    async function renderNewQuote() {\r\n      const quote = await getRandomQuote();\r\n      quoteDisplayElement.innerHTML = \"\";\r\n      quote.split(\"\").forEach((character) => {\r\n        const characterSpan = document.createElement(\"span\");\r\n        characterSpan.innerText = character;\r\n        quoteDisplayElement.appendChild(characterSpan);\r\n      });\r\n      quoteInputElement.value = null;\r\n      startTimer();\r\n    }\r\n\r\n    //start timer\r\n    let startTime;\r\n    function startTimer() {\r\n      timerElement.innerText = 0;\r\n      startTime = new Date();\r\n\r\n      setInterval(() => {\r\n        timerElement.innerText = getTimerTime();\r\n      }, 1000);\r\n    }\r\n\r\n    function getTimerTime() {\r\n      return Math.floor((new Date() - startTime) / 1000);\r\n    }\r\n    renderNewQuote();\r\n    setShow(true);\r\n  }\r\n  //explicit call for start function\r\n  function stoptr() {\r\n    setVisible(false);\r\n    start();\r\n    setShow(true);\r\n  }\r\n  //on stop realod the window\r\n  function stopfnc() {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text\">Welcome to Test Typing ðŸš€</h1>\r\n      <button onClick={start} className={visible ? \"btn1\" : \"btn\"}>\r\n        View\r\n      </button>\r\n      <div className={visible ? \"timer\" : \"timer1\"} id=\"timer\"></div>\r\n      <div className={visible ? \"container1\" : \"container\"} id=\"ctn\">\r\n        <div className=\"quote-display\" id=\"quoteDisplay\"></div>\r\n        <textarea\r\n          id=\"quoteInput\"\r\n          className=\"quote-input\"\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n        ></textarea>\r\n\r\n        {/* For giving warning when CapsLock is onn */}\r\n        <ReactIsCapsLockActive>\r\n          {(active) => (\r\n            <span\r\n              className=\"warning\"\r\n              style={{ display: active ? \"block\" : \"none\" }}\r\n            >\r\n              Caps lock is {active ? \"active\" : \"inactive\"}\r\n            </span>\r\n          )}\r\n        </ReactIsCapsLockActive>\r\n      </div>\r\n\r\n      {/* store score */}\r\n      <div\r\n        id=\"getscore\"\r\n        className={isscore ? \"getscoreshow\" : \"getscorehid\"}\r\n      ></div>\r\n\r\n      {/* Ready Button */}\r\n      <button onClick={(stoptr, ready)} className={ishow ? \"btn3\" : \"cls1\"}>\r\n        Ready\r\n      </button>\r\n\r\n      {/* Close Button */}\r\n      <button onClick={stopfnc} className={visible ? \"btn2\" : \"cls\"}>\r\n        Close\r\n      </button>\r\n\r\n      {/* Footer */}\r\n      <footer className={visible ? \"ftr1\" : \"ftr\"}>\r\n        Â© 2021 All Rights Reserved <br />\r\n        Made with â™¥ by Shubham Ashish |\r\n        <a\r\n          href=\"https://shubhamashish33.github.io/Profile-card/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          {\" \"}\r\n          Follow Me\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Header from \"./components/Header\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}